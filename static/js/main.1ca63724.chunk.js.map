{"version":3,"sources":["Editor/EditorUser.js","Editor/EditorWrite.js","Editor/Editor.js","Search/SearchCard.js","Search/SearchList.js","Posts/PostContent.js","Posts/CommentForm.js","Posts/Comment.js","Posts/CommentMerge.js","Posts/CommentList.js","Posts/CommentView.js","Posts/FromNow.js","Posts/AuthorInfo.js","Posts/View.js","Posts/PostUserInfo.js","Posts/Like.js","Posts/PopUpMenu.js","Posts/Share.js","Posts/CountInfo.js","Posts/PostView.js","Ui/Dimm.js","Card/CardUser.js","Card/CardContents.js","Card/CardAddedThumb.js","Card/CardAddedEmbed.js","Card/CardAddedPage.js","Card/CardAdded.js","Card/CardTag.js","Card/CardUtil.js","Ui/Toast.js","Ui/Popup/UserReport.js","Ui/Popup/Collections.js","Ui/Popup/Share.js","Ui/Popup/index.js","Ui/Confirm.js","Detail/Detail.js","Write/Write.js","Card/Card.js","List/List.js","Login/Login.js","actions/infoAction.js","actions/ActionTypes.js","Join/Join.js","App.js","serviceWorker.js","reducers/info.js","index.js"],"names":["EditorUser","react_default","a","createElement","className","this","props","userIcon","userName","Component","defaultProps","EditoerWrite","state","title","contents","handleChange","e","_this","setState","Object","defineProperty","target","name","value","goPostView","id","history","push","handleSubmit","console","log","axios","post","content","then","response","responseData","data","success","insertId","catch","placeholder","onChange","htmlFor","type","multiple","accept","onClick","Editor","EditorUser_EditorUser","EditorWrite_EditoerWrite","SearchCard","goCommentView","cardID","src","thumbnail","nicname","SearchList","searchList","map","card","index","SearchCard_SearchCard","key","PostContent","_this$props","CommentForm","preventDefault","onCreate","handleKeyUp","keyCode","onKeyUp","Comment","isComment","editing","inputReply","showReply","handleToggleEdit","onUpdate","comment_id","comment","handleUpdateLikes","likes","_this$props2","updateLikes","handleRemove","_this$props3","onRemove","nextProps","nextState","_this$state","react","cmtCount","CommentMerge","showReplyForm","createReply","info","onCreateReply","reply","replyList","length","Posts_Comment","Posts_CommentForm","CommentList","list","Posts_CommentMerge","CommentView","reply_id","sortBy","feed_id","comments","handleSort","getAttribute","getComments","commentList","concat","handleSubmitComment","handleUpdateComment","put","handleDeleteCommit","delete","dir","filter","handleCreateReply","information","author","time","objectSpread","handleUpdate","commentId","split","toString","rep","arr_len","sort","b","Posts_CommentList","FromNow","getTimeAgo","cur_time","Date","getTime","month","day","hour","minute","second","parseInt","AuthorInfo","View","PostUserInfo","postAuthor","postViews","views","postTime","moreInfo","Posts_AuthorInfo","Posts_FromNow","Posts_View","view","Like","like","likeCount","likeCmt","handleLikeCount","_this$state2","PopUpMenu","updateClickCount","count","_this2","menuList","item","Share","shareCount","menuOpen","shareMenu","selected","updateShareCount","toggleList","prevState","Posts_PopUpMenu","CountInfo","share","handleUpdateShare","updateShare","Posts_Like","Posts_Share","PostView","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_isMounted","getCardDetail","match","params","get","result","results","build_date","good","hits","error","authorImg","Posts_PostUserInfo","Posts_PostContent","Posts_CountInfo","Posts_CommentView","Confirm","dimm","close","CardUser","isFollow","dropdown","followUser","openDropdown","closeDropdown","substring","Fragment","href","alt","CardUser_Dropdown","confirm","popup","completeMsg","write","Dimm","Dropdown","userDropdown","evt","tit","cont","_this3","user","i","CardUser_DropdownItem","act","msg","ico","extra","ok","DropdownItem","utilEvt","_this4","tstmsg","CardContents","CardAddedThumb","added","CardAddedThumb_Thumb","ratio","more","insight","sight","Thumb","s","format","CardAddedEmbed","CardAddedEmbed_Embed","Embed","first","frameBorder","allow","allowFullScreen","url","CardAddedPage","CardAddedPage_Page","Page","desc","CardAdded","source","width","height","l_src","ex_src","indexOf","slice","Card_CardAddedThumb","Card_CardAddedEmbed","Card_CardAddedPage","cnt","isLike","likeThis","likeCnt","liked","CardUtil_Dropdown","utilDropdown","util","CardUtil_DropdownItem","Toast","toast","UserReport","checked","d_checked","userReport","label","for","inner","related","chkReport","reason","chkReportDetail","isChecked","chkEtc","etc","submit","d_isChecked","d_etc","onSubmit","report","UserReport_InnerReport","InnerReport","Collections","collections","chk_collections","addCollection","c_data","chkCollection","val","chk","document","querySelector","collection","Collections_CollectionList","firstletter","Collections_Create","l_collection","CollectionList","Create","creatable","createCollection","create","onKeyDown","shares","btn","alert","Share_ShareItem","click","ShareItem","Popup","closeDimm","Popup_UserReport","Popup_Collections","Popup_Share","isBtn","html","Detail","detail","Write","Card","toastMsg","setTimeout","openPopup","closePopup","openConfirm","closeConfirm","openDetail","closeDetail","openWrite","closeWrite","Card_CardUser","Card_CardContents","Card_CardAdded","CardTag","CardUtil","Ui_Toast","Ui_Confirm","Ui_Popup","src_Detail_Detail","src_Write_Write","List","feed","f","src_Card_Card","Login","email","password","isValidEmail","isValidPw","doLogin","_this$setState","target_name","test","loginSubmit","logined","Redirect","to","connect","infoFunc","logged","dispatch","Join","doJoin","joinSubmit","checkJoin","joined","App","isAuth","localStorage","setItem","BrowserRouter","Route","path","rrender","Editor_Editor_Editor","assign","auth","component","render","src_List_List","exact","src_Join_Join","src_Login_Login","Posts_PostView","Boolean","window","location","hostname","reducers","combineReducers","arguments","undefined","action","store","createStore","reducer","devToolsExtension","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ca63724.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class EditorUser extends Component {\n  \n  render() {\n    return (\n    <div className=\"editorUserInfo\">\n        <div className=\"editorUserIcon\">{this.props.userIcon}</div>\n        <div className=\"editorUserName\">{this.props.userName}</div>\n    </div>    \n    )\n  }\n}\nEditorUser.defaultProps = {\n  userIcon: '',\n  userName: '홍길동'\n}","import React, { Component } from 'react'\nimport axios from 'axios';\n\nexport default class EditoerWrite extends Component {\n    state = {\n        title: '',\n        contents: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    goPostView = (id) => {\n        this.props.history.push('/posts/' + id);\n      }\n\n    // post 작성\n    handleSubmit = () => {\n        console.log(this.state);\n        axios.post('http://dev-jolse.iptime.org:9000/feed', {\n            title: this.state.title,\n            content: this.state.contents,\n        })\n        .then( response => {\n            const responseData = response.data;\n            const successValue = responseData.success;\n            if (successValue === 1) {\n                // 작성 성공!\n                console.log(\"## response id == \" + responseData.insertId);\n                const id = responseData.insertId;\n                this.goPostView(id);\n            }\n        } )\n        .catch( response => { console.log(response) } );\n    }\n\n    render() {\n        return (\n        <div className=\"editorWrite\">\n            <div className=\"editorTitle\">\n                <textarea \n                    className=\"editorTitleInput\"\n                    placeholder=\"제목\" \n                    name=\"title\"    \n                    value={this.state.title}\n                    onChange={this.handleChange}        \n                >\n                </textarea>\n            </div>\n            <div className=\"editorContents\">\n                <textarea\n                    className=\"editorContentsTextarea\"\n                    placeholder=\"무슨 이야기를 나누고 싶으세요?\"\n                    name=\"contents\"\n                    value={this.state.contents}\n                    onChange={this.handleChange}\n                >\n                </textarea>\n                <div className=\"editorLeft\">\n                    <div className=\"editorFileInput editorInputIcon\">\n                        <label htmlFor=\"inputImg\">IMG Upload</label>\n                        <input type=\"file\" id=\"inputImg\" multiple accept=\"image/*\" />\n                    </div>\n                    <div className=\"editorMovieInput editorInputIcon\">\n                        <label htmlFor=\"inputMovie\">Movie Upload</label>\n                        <input type=\"file\" id=\"inputMovie\" accept=\"video/*\" />\n                    </div>\n                    <div className=\"editorLink\"></div>\n                    <ul>\n                        <li>BOLD</li>\n                        <li>ITALIC</li>\n                        <li></li>\n                        <li></li>\n                    </ul>\n                </div>\n            </div>\n            <button \n                type=\"submit\" \n                className=\"editorSave\"\n                onClick={this.handleSubmit}\n            >\n            게시\n            </button>\n        </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport EditorUser from './EditorUser';\nimport EditorWrite from './EditorWrite';\nimport './Editor.css';\n\n\nexport default class Editor extends Component {\n  render() {\n    const history = this.props.history;\n\n    return (\n      <div className=\"editorContainer\">\n        <EditorUser />    \n        <EditorWrite history={history}/>        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class SearchCard extends Component {\n    goCommentView = () => {\n        const cardID = this.props.id;\n        this.props.history.push('/posts/' + cardID);\n    }\n\n    render() {\n        return (\n        <div className=\"searchCard\">\n            <div className=\"cardThumbnail\"><img src={this.props.thumbnail} /></div>\n            <div className=\"cardInfo\">\n                <div className=\"cardInfoTitle\" onClick={this.goCommentView}>{this.props.title}</div>\n                <div className=\"cardInfoContents\">{this.props.contents}</div>\n                <div className=\"cardInfoBottom\">\n                    <div className=\"cardInfoNicname\">{this.props.nicname}</div>\n                    <div className=\"cardInfoIcon\">\n                        <ul>\n                            <li className=\"\">좋아요</li>\n                            <li className=\"\">댓글</li>\n                            <li className=\"\">링크</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport SearchCard from './SearchCard';\nimport './SearchList.css';\n\n\nexport default class SearchList extends Component {\n  state = {\n    searchList: [\n      {\n        id: 11034,\n        thumbnail: \"http://image.cine21.com/resize/cine21/poster/2018/0518/12_06_54__5afe434e1f297[H800-].PNG\",\n        title: \"보헤미안 랩소디\",\n        contents: \"보헤미안 랩소디 설명 영역\",\n        nicname: \"홍길동\"\n      },\n      {\n        id: 11035,\n        thumbnail: \"https://img.sbs.co.kr/newsnet/etv/upload/2018/10/10/30000614708_700.jpg\",\n        title: \"국가부도의 날\",\n        contents: \"국가부도의 날 설명 영역\",\n        nicname: \"김철수\"\n      }\n    ]\n  }\n  render() {\n    // 라우터에서 받아온 history\n    const history = this.props.history;\n\n    return (\n      <div className=\"searchList\">\n        {this.state.searchList.map((card, index) => {\n          return <SearchCard thumbnail={card.thumbnail} title={card.title}\n                    contents={card.contents} nicname={card.nicname}\n                    key={index} id={card.id} history={history}/>\n        })}\n      </div>\n    )\n  }\n}\n\n\n","import React, { Component } from 'react';\n\nclass PostContent extends Component {\n    render() {\n        const {title, content} = this.props;\n\n        return (\n            <div className=\"postContentWrap\">\n                <div>\n                    <span>{title}</span>\n                </div>\n                <div>\n                    <span>{content}</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PostContent;","import React, { Component } from 'react';\n\nclass CommentForm extends Component {\n    state = {\n        content: '',\n    }\n\n    handleSubmit = (e) => {\n        // preventDefault: submit의 기본 이벤트 동작을 막음\n        e.preventDefault();\n        const {content} = this.state;\n        // content 값이 있을때만 댓글 입력하도록 함\n        // 향후 button disabled/abled 로 관리\n        if (content) {\n            this.props.onCreate(content);\n            // submit 후 초기화\n            this.setState({\n                content: '',\n            });\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleKeyUp = (e) => {\n        e.preventDefault();\n        // Enter 키 눌렀을 떄 댓글 입력되도록 함\n        if (e.keyCode === 13) {\n            this.handleSubmit(e);\n        }\n    }\n\n    render() {\n        const {type} = this.props;\n\n        return (\n            <form className={(type === \"comment\") ? \"commentFormArea\" : \"replyFormArea\"}\n                    onKeyUp={this.handleKeyUp}>\n                {/* <div className=\"inputAuthor\">\n                    <input name=\"author\" className=\"inputId\"\n                        value={this.state.author}\n                        placeholder=\"아이디\"\n                        onChange={this.handleChange}></input>\n                </div> */}\n                <div className=\"inputForm\">\n                    <textarea className=\"inputContent\" name=\"content\"\n                    value={this.state.content}\n                    placeholder=\"댓글을 달아보세요\"\n                    onChange={this.handleChange}></textarea>\n                    <div className=\"submitArea\">\n                        <input type=\"button\" className=\"submitBtn\"\n                        onClick={this.handleSubmit}\n                        value=\"게시\"/>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default CommentForm;","import React, { Component, Fragment } from 'react';\n\nclass Comment extends Component {\n    state = {\n        isComment: (this.props.type === \"comment\"),\n        editing: false,\n    }\n\n    // 변경된 부분만 업데이트\n    shouldComponentUpdate(nextProps, nextState) {\n        if(this.state !== nextState){\n            return true;\n        }\n\n        return this.props.data !== nextProps.data;\n    }\n\n    // 답글 달기\n    inputReply = () => {\n        const {showReply} = this.props;\n        showReply();\n    }\n\n    // editing 값에 따라 수정/적용\n    handleToggleEdit = () => {\n        const {data, onUpdate} = this.props;\n        console.log(\"update content => \" + this.state.content);\n        if (this.state.editing) {\n            // 수정 모드: 수정된 content값을 업데이트하도록 함\n            onUpdate(data.comment_id, this.state.content);\n\n        } else {\n            // 적용 모드: 수정된(또는 원본) 내용을 가져와서 State에 세팅\n            this.setState({\n                content: data.comment,\n            });\n        }\n\n        // editing 값을 반전시킴\n        this.setState({\n            editing: !this.state.editing,\n        })\n    }\n\n    // '좋아요' 수 반영\n    handleUpdateLikes = (likes) => {\n        const {data, updateLikes} = this.props;\n        updateLikes(data.id, likes);\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    handleKeyUp = (e) => {\n        // Enter 키 눌렀을 떄 댓글 수정되도록 함\n        if (e.keyCode === 13) {\n            this.handleToggleEdit();\n        }\n    }\n\n    // 댓글 삭제\n    handleRemove = () => {\n        const {data, onRemove} = this.props;\n        onRemove(data.id);\n    }\n\n    render() {\n        // const {author, content, likes, time} = this.props.data;\n        const {comment} = this.props.data;\n        const {isComment, editing} = this.state;\n\n        return (\n            <div className={isComment ? \"comment\" : \"reply\"}>\n                {/* <div className=\"author\">{author}</div> */}\n                {\n                    editing ? (\n                        <Fragment>\n                            <div className=\"contentArea\">\n                                <input name=\"content\" value={this.state.content}\n                                onChange={this.handleChange}\n                                onKeyUp={this.handleKeyUp} />\n                            </div>\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <div>{comment}</div>\n                        </Fragment>\n                    )\n                }\n                <div className=\"commentFooterArea\">\n                    <div className=\"timeReplyArea\">\n                        {/* <FromNow time={time}/> */}\n                        {\n                            isComment ? (\n                                <Fragment>\n                                    <span>·</span>\n                                    <a className=\"replyArea\" onClick={this.inputReply}>\n                                        <span>답글 달기</span>\n                                    </a>\n                                </Fragment>\n                            ) : ''\n                        }\n                    </div>\n                    <div className=\"updateArea\">\n                        {/* <Like likes={likes} onUpdate={this.handleUpdateLikes}/> */}\n                        <span>{this.state.cmtCount}</span>\n                        <input type=\"button\" value={editing ? \"적용\" : \"수정\"}\n                                onClick={this.handleToggleEdit}></input>\n                        <input type=\"button\" value=\"삭제\"\n                                onClick={this.handleRemove}></input>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Comment;","import React, { Component, Fragment } from 'react';\nimport Comment from './Comment';\nimport CommentForm from './CommentForm';\n\nclass CommentMerge extends Component {\n    state = {\n        showReply: false,\n    }\n\n    // 하단에 답글 Form 생성\n    showReplyForm = () => {\n        this.setState({\n            showReply: !this.state.showReply,\n        });\n    }\n\n    // 답글 입력\n    createReply = (data) => {\n        const {info, onCreateReply} = this.props;\n        onCreateReply(info.id, data);\n    }\n\n    render() {\n        const {info, onUpdate, onRemove, updateLikes} = this.props;\n        const {showReply} = this.state;\n\n        const reply = info.reply;\n        let replyList = '';\n        if (reply && reply.length > 0) {\n            replyList = reply.map(\n                reply => (<Comment type=\"reply\"\n                            data={reply} key={reply.id}\n                            onUpdate={onUpdate}\n                            onRemove={onRemove}\n                            updateLikes={updateLikes}/>)\n            )\n        }\n\n        return (\n            <div className=\"commentWrap\">\n                <Comment type=\"comment\"\n                        data={info} key={info.id}\n                        onUpdate={onUpdate}\n                        onRemove={onRemove}\n                        updateLikes={updateLikes}\n                        showReply={this.showReplyForm}/>\n                {replyList}\n                {\n                    showReply && (\n                        <Fragment>\n                            <CommentForm type=\"reply\" onCreate={this.createReply}/>\n                        </Fragment>\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default CommentMerge;","import React, { Component } from 'react';\nimport CommentMerge from './CommentMerge';\n\nclass CommentList extends Component {\n    static defaultProps = {\n        data: []\n    }\n    \n    render() {\n        const {data, onUpdate, onRemove, updateLikes, onCreateReply} = this.props;\n\n        const list = data.map(\n            info => (<CommentMerge info={info} key={info.id}\n                                    onUpdate={onUpdate}\n                                    onRemove={onRemove}\n                                    updateLikes={updateLikes}\n                                    onCreateReply={onCreateReply}/>)\n        )\n\n        return (\n            <div className=\"commentList\">\n                {list}\n            </div>\n        );\n    }\n}\n\nexport default CommentList;","import React, { Component } from 'react';\nimport CommentForm from './CommentForm';\nimport CommentList from './CommentList';\nimport axios from 'axios';\n\nclass CommentView extends Component {\n    // 댓글마다 고유한 id값\n    comment_id = 3;\n    reply_id = 2;\n\n    static defaultProps = {\n        comments: []\n    }\n\n    state = {\n        sortBy: \"likes\",\n        feed_id: this.props.id,\n        comments: this.props.comments,\n    }\n\n    /**\n     * 댓글 정렬 (디폴트: 추천순 정렬)\n     * 여기서는 정렬기준을 on/off해주고,\n     * 렌더링할 때 이 기준에 따라 정렬되도록 함\n     */\n    handleSort = (e) => {\n        let {sortBy} = this.state;\n        const type = e.target.getAttribute('name');\n\n        if (sortBy !== type) {\n            this.setState({\n                sortBy: type,\n            });\n        }\n    }\n\n    // 변경된 부분만 업데이트\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state !== nextState) {\n            return true;\n        }\n        \n        return this.props.comments !== nextProps.comments;\n    }\n\n    componentDidMount () {\n        console.log(\"### CommentView ComponentDidMount\");\n        this.getComments();\n    }\n\n    // 댓글 가져와서 보여주기\n    getComments = () => {\n        const {comments} = this.props;\n        let commentList = this.state.comments;\n        this.setState({\n            comments: commentList.concat(comments),\n        });\n    }\n\n    // 댓글 입력\n    handleSubmitComment = (data) => {\n        const {feed_id} = this.state;\n        let {comments} = this.state;\n\n        axios.post('http://dev-jolse.iptime.org:9000/comment/' + feed_id, {\n            comment: data,\n        })\n        .then( response => {\n            const responseData = response.data;\n            const successValue = responseData.success;\n            if (successValue === 1) {\n                // 작성 성공!\n                let comment_id = responseData.insertId;\n                console.log(\"### comment 입력 성공! id = \" + comment_id);\n                this.setState({\n                    comments: comments.concat({\n                        id: comment_id,\n                        comment: data,\n                        feed_id: feed_id,\n                    })\n                });\n            }\n        } )\n        .catch( response => { console.log(response) } );\n    }\n\n    // 댓글 수정\n    handleUpdateComment = (id, data) => {\n        const comment_id = id;\n        let {comments} = this.state;\n        console.log(comments);\n        axios.put('http://dev-jolse.iptime.org:9000/comment/' + comment_id, {\n            comment: data,\n        })\n        .then( response => {\n            const responseData = response.data;\n            const successValue = responseData.success;\n            if (successValue === 1) {\n                // 댓글 수정 성공!\n                console.log(\"### comment 수정 성공! id = \" + comment_id);\n\n                this.setState({\n                    comments: comments.map(\n                        info => {\n                            console.log(info.id + \"===\" + comment_id);\n                            if (info.id === comment_id) {\n                                return {\n                                    id: comment_id,\n                                    comment: data,\n                                    feed_id: this.state.feed_id,\n                                };\n                            }\n                            return info;\n                        }\n                    )\n                });\n            }\n        } )\n        .catch( response => { console.log(response) } );\n    }\n\n    // 댓글 삭제\n    handleDeleteCommit = (id) => {\n        const comment_id = id;\n        let {comments} = this.state;\n\n        axios.delete('http://dev-jolse.iptime.org:9000/comment/' + comment_id, {})\n        .then( response => {\n            const responseData = response.data;\n            const successValue = responseData.success;\n            if (successValue === 1) {\n                // 댓글 삭제 성공!\n                console.log(\"### comment 삭제 성공! id = \" + comment_id);\n                console.dir(comments);\n                this.setState({\n                    comments: comments.filter(info => info.id !== comment_id)\n                });\n            }\n        } )\n        .catch( response => { console.log(response) } );\n    }\n\n    // 답글 입력\n    handleCreateReply = (id, data) => {\n        const {information} = this.state;\n\n        this.setState({\n            information: information.map(\n                info => {\n                    if (info.id === id) {\n                        return {\n                            id: info.id,\n                            author: info.author,\n                            content: info.content,\n                            likes: info.likes,\n                            time: info.time,\n                            reply: info.reply.concat({\n                                // 답글이 추가될 때 id 설정\n                                id: info.id + \"-\" + this.reply_id++,\n                                ...data\n                            })\n                        }\n                    }\n                    return info;\n                }\n            )\n        });\n    }\n\n    // 댓글 수정\n    handleUpdate = (id, data) => {\n        let {information} = this.state;\n        // id 의 type으로 댓글/답글 여부 판단\n        const isReply = (typeof(id) === 'string');\n\n        if (isReply) {\n            // 댓글의 답글 수정\n            const idArr = id.split('-');\n            const commentId = idArr[0];\n\n            this.setState({\n                information: information.map(\n                    info => {\n                        if (info.id.toString() === commentId) {\n                            let reply = info.reply;\n                            return {\n                                id: info.id,\n                                author: info.author,\n                                content: info.content,\n                                likes: info.likes,\n                                time: info.time,\n                                reply: reply.map(\n                                    rep => {\n                                        if (rep.id === id) {\n                                            return {\n                                                id: rep.id,\n                                                author: rep.author,\n                                                time: rep.time,\n                                                likes: rep.likes,\n                                                ...data\n                                            }\n                                        }\n                                        return rep;\n                                })\n                                \n                            }\n                        }\n                        return info;\n                    }\n                )\n            });\n            \n        } else {\n            // 기본 댓글 수정\n            this.setState({\n                information: information.map(\n                    info => {\n                        if (info.id === id) {\n                            return {\n                                id: id,\n                                author: info.author,\n                                time: info.time,\n                                likes: info.likes,\n                                reply: info.reply,\n                                ...data,\n                            };\n                        }\n                        return info;\n                    }\n                )\n            });\n        }\n    }\n\n    // 좋아요 수 반영\n    updateLikes = (id, likes) => {\n        const {information} = this.state;\n        // id 의 type으로 댓글/답글 여부 판단\n        const isReply = (typeof(id) === 'string');\n\n        if (isReply) {\n            // 답글의 좋아요 반영\n            const idArr = id.split('-');\n            const commentId = idArr[0];\n\n            this.setState({\n                information: information.map(\n                    info => {\n                        if (info.id.toString() === commentId) {\n                            let reply = info.reply;\n                            return {\n                                id: info.id,\n                                author: info.author,\n                                content: info.content,\n                                likes: info.likes,\n                                time: info.time,\n                                reply: reply.map(\n                                    rep => {\n                                        if (rep.id === id) {\n                                            return {\n                                                id: rep.id,\n                                                author: rep.author,\n                                                content: rep.content,\n                                                time: rep.time,\n                                                likes: likes,\n                                            }\n                                        }\n                                        return rep;\n                                })\n                                \n                            }\n                        }\n                        return info;\n                    }\n                )\n            });\n\n        } else {\n            // 댓글의 좋아요 반영\n            this.setState({\n                information: information.map(\n                    info => {\n                        if (info.id === id) {\n                            return {\n                                id: id,\n                                author: info.author,\n                                content: info.content,\n                                likes: likes,\n                                time: info.time,\n                                reply: info.reply,\n                            };\n                        }\n                        return info;\n                    }\n                )\n            });\n        }\n    }\n\n    // 댓글 삭제\n    handleRemove = (id) => {\n        const {information} = this.state;\n        // id 의 type으로 댓글/답글 여부 판단\n        const isReply = (typeof(id) === 'string');\n\n        if (isReply) {\n            // 답글 삭제\n            const idArr = id.split('-');\n            const commentId = idArr[0];\n\n            this.setState({\n                information: information.map(\n                    info => {\n                        if (info.id.toString() === commentId) {\n                            let reply = info.reply;\n                            return {\n                                id: info.id,\n                                author: info.author,\n                                content: info.content,\n                                likes: info.likes,\n                                time: info.time,\n                                reply: reply.filter(rep => rep.id !== id),\n                            }\n                        }\n                        return info;\n                    }\n                )\n            });\n\n        } else {\n            // 댓글 삭제\n            this.setState({\n                information: information.filter(info => info.id !== id)\n            });\n        }        \n    }\n    \n    render() {\n        let {comments} = this.props;\n        let {sortBy} = this.state;\n        const arr_len = comments.length;\n\n        // 기준(추천순/최신순)에 따라 정렬 수행\n        comments = comments.sort(function(a, b) {\n            return b[sortBy] - a[sortBy];\n        });\n\n        return (\n            <div className=\"commentListWrap\">\n                <div className=\"commentListFunc\">\n                    <div className=\"commentCount\">\n                        <span>{arr_len}</span><span>개의 댓글</span>\n                    </div>\n                    <div className=\"commentSort\">\n                        <div className={(sortBy === \"likes\") ? \"sortSelected\" : \"sort\"}\n                            onClick={this.handleSort}>\n                            <span name=\"likes\">추천순</span>\n                        </div>\n                        <div className=\"sortSep\"></div>\n                        <div className={(sortBy === \"time\") ? \"sortSelected\" : \"sort\"}\n                            onClick={this.handleSort}>\n                            <span name=\"time\">최신순</span>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <CommentList data={comments}\n                    onUpdate={this.handleUpdateComment}\n                    onRemove={this.handleDeleteCommit}\n                    updateLikes={this.updateLikes}\n                    onCreateReply={this.handleCreateReply}/>\n                    <hr />\n                    <CommentForm type=\"comment\" onCreate={this.handleSubmitComment}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CommentView;","import React, { Component } from 'react';\n\nclass FromNow extends Component {\n    // 경과시간 계산\n    getTimeAgo = () => {\n        const time = this.props.time;\n        console.log(\"before_time = \" + time);\n        // 현재 시간 불러와서 차이 계산\n        const cur_time = new Date().getTime();\n        console.log(\"cur_time = \" + cur_time);\n        let second = (cur_time - time) / 1000;\n        let year, month, day, hour, minute, elapsed;\n\n        if (second > 60) {\n            minute = second / 60;\n            if (minute > 60) {\n                hour = minute / 60;\n                if (hour > 24) {\n                    day = hour / 24;\n                    if (day > 30) {\n                        month = day / 30;\n                        if (month > 12) {\n                            year = month / 12;\n                            elapsed = parseInt(year) + \"년\";\n                        } else {\n                            elapsed = parseInt(month) + \"달\";\n                        }\n                    } else {\n                        elapsed = parseInt(day) + \"일\";\n                    }\n                } else {\n                    elapsed = parseInt(hour) + \"시간\";\n                }\n            } else {\n                elapsed = parseInt(minute) + \"분\";\n            }\n        } else {\n            elapsed = \"몇 초\";\n        }\n\n        return elapsed\n    }\n\n    render() {\n        return (\n            <div className=\"time\">\n                <span className=\"fromNow\">{this.getTimeAgo()} 전</span>\n            </div>\n        );\n    }\n}\n\nexport default FromNow;","import React, { Component } from 'react';\n\nclass AuthorInfo extends Component {\n    state = {\n\n    }\n\n    render() {\n        const {author} = this.props;\n\n        return (\n            <div className=\"authorArea\">\n                <span className=\"author\">{author}</span>\n            </div>\n        );\n    }\n}\n\nexport default AuthorInfo;","import React, { Component } from 'react';\n\nclass View extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        );\n    }\n}\n\nexport default View;","import React, { Component } from 'react';\nimport FromNow from './FromNow';\nimport AuthorInfo from './AuthorInfo';\nimport View from './View';\n\nclass PostUserInfo extends Component {\n    state = {\n        postAuthor: this.props.author,\n        postViews: this.props.views,\n        postTime: this.props.time,\n        moreInfo: false,\n    }\n\n    render() {\n        const {author, time, views} = this.props;\n\n        return (\n            <div className=\"userInfoWrap\">\n                <AuthorInfo author={author}/>\n                <FromNow time={time}/>\n                <View view={views}/>\n            </div>\n        );\n    }\n}\n\nexport default PostUserInfo;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Like extends Component {\n    state = {\n        feed_id: this.props.id,\n        like: true,\n        likeCount: this.props.likes,\n    }\n\n    /**\n     * 댓글의 원래 '좋아요' 수에서\n     * '좋아요'버튼을 한번 누르면 ++, 그 상태에서 한번 더 누르면 --\n     */\n    likeCmt = () => {\n        const {onUpdate} = this.props;\n        let {like, likeCount} = this.state;\n\n        if (like) {\n            likeCount++;\n\n        } else {\n            likeCount--;\n        }\n        \n        onUpdate(likeCount);\n\n        this.setState({\n            like: !like,\n            likeCount: likeCount,\n        });\n    }\n\n    handleLikeCount = () => {\n        let {feed_id, like, likeCount} = this.state;\n\n        if (like) {\n            // 좋아요 증가\n            axios.put('/good/' + feed_id, {})\n            .then( response => {\n                const responseData = response.data;\n                const successValue = responseData.success;\n                if (successValue === 1) {\n                    likeCount++;\n\n                    this.setState({\n                        like: !like,\n                        likeCount: likeCount,\n                    });\n                }\n            } )\n            .catch( response => { console.log(response) } );\n\n        } else {\n            // 좋아요 취소\n            axios.delete('/good/' + feed_id, {})\n            .then( response => {\n                const responseData = response.data;\n                const successValue = responseData.success;\n                if (successValue === 1) {\n                    likeCount--;\n\n                    this.setState({\n                        like: !like,\n                        likeCount: likeCount,\n                    });\n                }\n            } )\n            .catch( response => { console.log(response) } );\n        }\n    }\n\n    render() {\n        const {likeCount} = this.state;\n\n        return (\n            <div className=\"likeArea\">\n                <input type=\"button\" value=\"좋아요\" onClick={this.handleLikeCount}></input>\n                <span>{likeCount}</span>\n            </div>\n        );\n    }\n}\n\nexport default Like;","import React, { Component } from 'react';\n\nclass PopUpMenu extends Component {\n    // click count 증가\n    updateClickCount = () => {\n        const {onUpdate} = this.props;\n        let {count} = this.props;\n        \n        count++;\n\n        onUpdate(count);\n    }\n\n    // props 값이 변경될 때만 re-rendering\n    shouldComponentUpdate(nextProps) {\n        return this.props !== nextProps;\n    }\n\n    render() {\n        const {menuList} = this.props;\n\n        return (\n            <div className=\"popUpMenu\">\n                <div className=\"menuList\">\n                    {menuList.map((item) => (\n                        <li className=\"menuItem\" key={item.id} onClick={this.updateClickCount}>{item.title}</li>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopUpMenu;","import React, { Component } from 'react';\nimport PopUpMenu from './PopUpMenu';\n\nclass Share extends Component {\n    state = {\n        shareCount: this.props.shareCount,\n        menuOpen: false,\n        shareMenu: [{\n            id: 0,\n            title: '기본 컬렉션에 저장하기',\n            selected: false,\n        },\n        {\n            id: 1,\n            title: '카드에 작성하기',\n            selected: false,\n        },\n        {\n            id: 2,\n            title: '외부에 공유하기',\n            selected: false,\n        }]\n    }\n\n    // 클릭할 때마다 공유하기 count 증가\n    updateShareCount = (count) => {\n        const {onUpdate} = this.props;\n        \n        onUpdate(count);\n\n        this.setState({\n            shareCount: count,\n        });\n    }\n\n    // 외부 클릭시 menu close (아직 구현안함)\n    handleClickOutside(){\n        this.setState({\n            menuOpen: false,\n        });\n    }\n\n    // menu open/close toggle\n    toggleList = () => {\n        this.setState(prevState => ({\n            menuOpen: !prevState.menuOpen,\n        }));\n    }\n\n    render() {\n        const {shareCount, menuOpen, shareMenu} = this.state;\n\n        return (\n            <div className=\"shareArea\">\n                <input type=\"button\" value=\"공유\" onClick={this.toggleList}></input>\n                <span>{shareCount}</span>\n                {\n                    menuOpen && <PopUpMenu menuList={shareMenu} count={shareCount}\n                                            onUpdate={this.updateShareCount}/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Share;","import React, { Component } from 'react';\nimport Like from './Like';\nimport Share from './Share';\n\nclass CountInfo extends Component {\n    state = {\n        feed_id: this.props.id,\n        likes: this.props.likes,\n        share: this.props.shareCount,\n    }\n\n    handleUpdateLikes = (likes) => {\n        // Post 좋아요\n        const {updateLikes} = this.props;\n        updateLikes(likes);\n    }\n\n    handleUpdateShare = (share) => {\n        // Post 공유하기\n        const {updateShare} = this.props;\n        updateShare(share);\n    }\n\n    render() {\n        const {feed_id, likes, share} = this.state;\n\n        return (\n            <div className=\"countInfoArea\">\n                <Like id={feed_id} likes={likes} onUpdate={this.handleUpdateLikes}/>\n                <Share id={feed_id} shareCount={share} onUpdate={this.handleUpdateShare} />\n            </div>\n        );\n    }\n}\n\nexport default CountInfo;","import React, { Component } from 'react';\nimport PostContent from './PostContent';\nimport CommentView from './CommentView';\nimport PostUserInfo from './PostUserInfo';\nimport CountInfo from './CountInfo';\nimport axios from 'axios';\nimport './Comment.css';\n\nclass PostView extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            feed_id: this.props.match.params.id,\n            author: '홍길동',\n            authorImg: '',\n            shareCount: 10,\n            title: '',\n            content: '',\n            build_date: '',\n            good: 0,\n            hits: 0,\n            comments: [],\n        };\n    }\n\n    // 변경될 때만 업데이트\n    shouldComponentUpdate(nextProps, nextState) {\n        if(this.state !== nextState){\n            return true;\n        }\n\n        return this.props.data !== nextProps.data;\n    }\n\n    // 컴포넌트가 DOM 위에 만들어진 후에 실행\n    componentDidMount () {\n        this._isMounted = true;\n        console.log(\"### PostView componentDidMount\");\n        this.getCardDetail();\n    }\n\n    componentWillUnmount () {\n        this._isMounted = false;\n    }\n\n    // 상세 페이지 보여주기\n    getCardDetail = () => {\n        const feed_id = this.props.match.params.id;\n        console.log(\"getCardDetail feed == \", feed_id);\n        axios.get('http://dev-jolse.iptime.org:9000/feed/' + feed_id, {})\n        .then( response => {\n            const responseData = response.data;\n            const successValue = responseData.success;\n            if (successValue === 1) {\n                // 성공!\n                let result = responseData.results;\n                console.log(result);\n\n                const build_date = new Date(result.build_date);\n                console.log(\"time == \", build_date.getTime());\n\n                this._isMounted && this.setState({\n                    feed_id: result.feed_id,\n                    title: result.title,\n                    content: result.content,\n                    build_date: build_date.getTime(),\n                    good: result.good,\n                    hits: result.hits,\n                    comments: result.comments,\n                });\n            }\n        } )\n        .catch( error => { console.log(error) } );\n    }\n\n    updateLikes = (likes) => {\n        // Post 좋아요\n        this.setState({\n            good: likes,\n        });\n    }\n\n    updateShare = (share) => {\n        // Post 공유\n        this.setState({\n            shareCount: share,\n        });\n    }\n\n    render() {\n        const {feed_id, author, title, content, build_date, good, shareCount, hits, comments} = this.state;\n        console.log(comments);\n\n        return (\n            <div className=\"postWrap\">\n                <div className=\"postFrame\">\n                    <PostUserInfo time={build_date} author={author} views={hits} />\n                    <PostContent id={feed_id} title={title} content={content} />\n                    <CountInfo id={feed_id} likes={good} updateLikes={this.updateLikes}\n                                shareCount={shareCount} updateShare={this.updateShare}/>\n                    <CommentView id={feed_id} comments={comments}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PostView;","import React, { Component } from 'react';\n\nclass Confirm extends Component {\n  state = {\n    dimm: false,\n  }\n  static defaultProps = {\n    close: () => {},\n  }\n  \n  render() {\n    const {\n      close\n    } = this.props\n    \n    return (\n      <div id=\"dimm\" onClick={() => close()}></div>\n    );\n  }\n}\n\nexport default Confirm;","import React, { Component } from 'react';\nimport Dimm from '../Ui/Dimm';\n\nclass CardUser extends Component {\n  state = {\n    isFollow: false,\n    dropdown: false,\n    time: '2018-12-12',\n  }\n\n\n  componentDidMount (){\n    this.setState({\n      time: this.props.time.substring(0, 10)\n    })\n  }\n  \n  followUser = () =>{\n    this.setState({\n      isFollow: !this.state.isFollow,\n    });\n  }\n\n  openDropdown = () =>{\n    this.setState({\n      dropdown: true,\n    });\n  }\n  closeDropdown = () =>{\n    this.setState({\n      dropdown: false\n    });\n  }\n\n  \n\n  render() {\n    const {\n      time,\n    } = this.state;\n    \n    const {id} = this.props;\n\n    return (\n      <>\n\n        {/* 카드 :: 유저인포 */}\n        <div className=\"user\">\n          <div className=\"img\"><a href=\"#\"><img src=\"https://media.vingle.net/images/us_l/w5w8vzbw6j.jpg\" alt=\"\" /></a></div>\n          <div className=\"info\">\n            <div className=\"name\"><a href=\"#\">{id} 작성자명</a></div>\n            <div className=\"time\">{time}</div>\n          </div>\n          <div className=\"follow\">\n            <button type=\"button\" \n                    className={this.state.isFollow ? 'active' : ''} \n                    onClick={this.followUser}>\n                    {this.state.isFollow \n                      ? '팔로잉'\n                      : '+ 팔로우'\n                    }\n            </button>\n          </div>\n          <div className=\"more\">\n            <div className=\"dropdownGroup\">\n              <button type=\"button\" onClick={this.openDropdown}><i className=\"fas fa-ellipsis-h\"></i><span className=\"blind\">더보기</span></button>\n              {/* 글로벌 기능 :: 드롭다운 */}\n              {this.state.dropdown && \n                <>\n                  <Dropdown confirm={this.props.confirm} \n                            popup={this.props.popup}\n                            completeMsg={this.props.completeMsg}\n                            write={this.props.write}\n                   />\n                  <Dimm close={this.closeDropdown} />\n                </>\n              }\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nclass Dropdown extends Component {\n  state = {\n    dropdown: false,\n    userDropdown: [\n      {name:'이 유저 뮤트하기', evt:'confirm', id:'mute', tit:'이 유저 뮤트하기', cont:'뮤트하면 더 이상 이 회원의 카드가 피드에 나타나지 않습니다. 뮤트하시겠어요?'},\n      {name:'신고하기', evt:'popup', id:'report', tit:'이 콘텐츠를 신고하는 이유는 무엇인가요?'},\n      {name:'수정하기', evt:'write', id:'modify'},\n      {name:'삭제하기', evt:'confirm', id:'del', tit:'삭제하기', cont:'정말 이 카드를 삭제하시겠습니까?'},\n    ],\n  }\n\n  static defaultProps = {\n    name: '',\n    ico: '',\n    id: '',\n    extra:'',\n    evt:'',\n    ok:'',\n  }\n  \n  render() {\n\n    \n    return (\n      <div className=\"dropdown\">\n        {/* 카드-유저-더보기 */}\n        <>\n          {this.state.userDropdown.map((user, i) => {\n              return (<DropdownItem name={user.name}\n                                    evt={user.evt}\n                                    act={user.id}\n                                    tit={user.tit}\n                                    cont={user.cont}\n                                    msg={user.msg}\n                                    confirm={this.props.confirm}\n                                    popup={this.props.popup}\n                                    completeMsg={this.props.completeMsg}\n                                    write={this.props.write}\n                                    key={i}/>);\n          })}\n        </>\n      </div>\n    );\n  }\n}\n\nclass DropdownItem extends Component {\n  state = {\n    msg: '',\n  }\n  utilEvt = () =>{\n    let evt = this.props.evt,\n        act = this.props.act,\n        tit = this.props.tit,\n        cont = this.props.cont,\n        tstmsg = this.props.msg;\n\n    if (evt === 'confirm') {\n      this.props.confirm(act, tit, cont);\n    }\n    if (evt === 'popup') {\n      this.props.popup(act, tit);\n    }\n    if (evt === 'toast') {\n      this.props.completeMsg(tstmsg);\n    }\n    if (evt === 'write') {\n      this.props.write()\n    }\n  }\n\n  render() {\n\n    return (\n      <div className={this.props.extra ? 'extraItem' : 'item'}>\n        <button type=\"button\" title={this.props.name} className={this.props.extra} onClick={this.utilEvt}>\n          {this.props.ico &&\n            <i className={this.props.ico}></i>\n           }\n          <span className={this.props.extra && 'blind'}>{this.props.name}</span>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CardUser;","import React, { Component } from 'react';\n\nclass CardContents extends Component {\n  render() {\n    const {\n      title,\n      contents,\n    } = this.props;\n    return (\n      <>\n        {/* 카드 :: 제목 */}\n        <div className=\"title\" onClick={this.props.view}>{title}</div>\n\n        {/* 카드 :: 내용 - 5줄까지 노출, 6줄이상부터는 마지막줄의 3글자 삭제 후 ...더보기 노출 */}\n        <div className=\"contents\" onClick={this.props.view}>\n        {contents &&\n         contents\n        }\n        {/* \n          카드 내용<br />\n          줄바꿈은 적용된채로 나와야 한다<br />\n          볼드나 이탤릭, 하이퍼링크는 빠진 채로 콘텐츠의 텍스트들만 들어가 있다<br />\n          최대 다섯줄까지 노출되어야 하고 여섯줄 이상일때<br />\n          다섯줄째의 마지막 세글자는 말줄임이 되어야 하는데 어떻게 하는거야<span className=\"more\">더 보기</span><br />\n          여섯줄이 되면 이건 안보여야 함\n         */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CardContents;","import React, { Component } from 'react';\n\nclass CardAddedThumb extends Component {\n\n  render() {\n    const {\n      added,\n    } = this.props;\n    return (\n      <>\n        <Thumb type={added.type}\n                ratio={added.ratio}\n                more={added.more}\n                insight={added.insight}\n                sight={added.sight}\n                view={this.props.view}\n         />\n        {/*console.log(this.props.added)*/}\n      </>\n    );\n  }\n}\n\nclass Thumb extends Component {\n  render() {\n    const { sight } = this.props;\n\n    return (\n      <>\n         <div className={\"added thumb thumbratio_\"+ this.props.ratio +\" thumbtype_\"+this.props.insight}>\n            <div className=\"box\" onClick={this.props.view}>\n              {this.props.ratio === 'q' && this.props.insight >= 4\n                ? <>\n                  <div className=\"wrap\">\n                    {sight.map((s, i) => {\n                      if (i <= 1){\n                        return (<div className={\"inner format_\"+s.format} key={i}><img src={s.src} alt=\"\" /></div>);\n                      }\n                    })}\n                  </div>\n                  <div className=\"wrap\">\n                    {sight.map((s, i) => {\n                      if (i > 1){\n                        if (i === sight.length-1 && this.props.more) {\n                          return (\n                            <React.Fragment key={i}>\n                            <div className={\"inner format_\"+s.format} key={i}><img src={s.src} alt=\"\" /></div>\n                            <span className=\"more\">+{this.props.more}</span>\n                            </React.Fragment>\n                          );\n                        } else {\n                          return (<div className={\"inner format_\"+s.format} key={i}><img src={s.src} alt=\"\" /></div>);\n                        }\n                      }\n                    })}\n                  </div>\n                  </>\n                : <>\n                  <div className=\"wrap\">\n                    {sight.map((s, i) => {\n                      if (i === 0){\n                        return (<div className={\"inner format_\"+s.format} key={i}><img src={s.src} alt=\"\" /></div>);\n                      }\n                    })}\n                  </div>\n                  <div className=\"wrap\">\n                    {sight.map((s, i) => {\n                      if (i !== 0){\n                        if (i === sight.length-1 && this.props.more) {\n                          return (\n                            <React.Fragment key={i}>\n                            <div className={\"inner format_\"+s.format}><img src={s.src} alt=\"\" /></div>\n                            <span className=\"more\">+{this.props.more}</span>\n                            </React.Fragment>\n                          );\n                        } else {\n                          return (<div className={\"inner format_\"+s.format} key={i}><img src={s.src} alt=\"\" /></div>);\n                        }\n                      }\n                    })}\n                  </div>\n                  </>\n              }\n            </div>\n          </div>\n\n\n        {/* 카드 :: 첨부 - 이미지/동영상 : 썸네일형태\n        <div className=\"added thumb thumbratio_w thumbtype_5\">\n            <div className=\"box clear\">\n              <div className=\"wrap\">\n                <div className=\"inner\"><img src=\"https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg\" alt=\"\" /></div>\n              </div>\n              <div className=\"wrap\">\n                <div className=\"inner format_video\"><img src=\"https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg\" alt=\"\" /></div>\n                <div className=\"inner format_gif\"><img src=\"https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg\" alt=\"\" /></div>\n                <div className=\"inner\"><img src=\"https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg\" alt=\"\" /></div>\n                <div className=\"inner\"><img src=\"https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg\" alt=\"\" /></div>\n                <span className=\"more\">+1</span>\n              </div>\n            </div>\n          </div>\n           */}\n      </>\n    );\n  }\n}\n\nexport default CardAddedThumb;","import React, { Component } from 'react';\n\nclass CardAddedEmbed extends Component {\n  render() {\n    const {\n      added,\n    } = this.props;\n    return (\n      <>\n        <Embed type={added.type}\n                more={added.more}\n                insight={added.insight}\n                sight={added.sight}\n                view = {this.props.view}\n        />\n        {console.log(this.props.added)}\n      </>\n    );\n  }\n}\n\nclass Embed extends Component {\n  render() {\n    const { sight } = this.props;\n    const first = sight[0];\n    \n    return (\n      <>\n        <div className=\"added share embed\">\n          <div className=\"inner\">\n            <div className=\"source\"><iframe src={\"https://www.youtube.com/embed/\"+ first.title} frameBorder=\"0\" title=\"유튜브 보기\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe></div>\n            <div className=\"url\"><a href={first.href} target=\"_blank\">{first.url} <i className=\"fas fa-angle-right\"></i></a></div>\n          </div>\n          {this.props.more &&\n          <button type=\"button\" className=\"more\" onClick={this.props.view}>+ {this.props.more}개의 미디어 더 보기</button>\n          }\n        </div>\n\n        {/* 카드 :: 첨부 - 영상 ifame : 임베드형태\n        <div className=\"added share embed\">\n          <div className=\"inner\">\n            <div className=\"source\"><iframe src=\"https://www.youtube.com/embed/mP--G6TmH8Q\" frameBorder=\"0\" title=\"\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe></div>\n            <div className=\"url\"><a href=\"https://www.youtube.com/watch?time_continue=2&amp;v=mP--G6TmH8Q\" target=\"_blank\">www.youtube.com <i className=\"fas fa-angle-right\"></i></a></div>\n          </div>\n          <button type=\"button\" className=\"more\">+ 3개의 미디어 더 보기</button>\n        </div>\n         */}\n      </>\n    );\n  }\n}\n\nexport default CardAddedEmbed;","import React, { Component } from 'react';\n\nclass CardAddedPage extends Component {\n  render() {\n    const {\n      added,\n    } = this.props;\n    return (\n      <>\n        <Page type={added.type}\n              more={added.more}\n              insight={added.insight}\n              sight={added.sight}\n              view = {this.props.view}\n        />\n        {console.log(this.props.added)}\n      </>\n    );\n  }\n}\nclass Page extends Component {\n  render() {\n    const { sight } = this.props;\n    const first = sight[0];\n    \n    return (\n      <>\n        {/* 카드 :: 첨부 - 페이지 링크형태 */}\n        <div className=\"added share page\">\n          <a href={first.href} target=\"_blank\">\n            <div className=\"inner\">\n              <div className=\"source\">\n                <p className=\"title\">{first.title}</p>\n                <p className=\"desc\">{first.desc}</p>\n              </div>\n              <div className=\"url\">{first.url} <i className=\"fas fa-angle-right\"></i></div>\n            </div>\n          </a>\n          {this.props.more &&\n          <button type=\"button\" className=\"more\" onClick={this.props.view}>+ {this.props.more}개의 링크 더 보기</button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CardAddedPage;","import React, { Component } from 'react';\nimport CardAddedThumb from './CardAddedThumb';\nimport CardAddedEmbed from './CardAddedEmbed';\nimport CardAddedPage from './CardAddedPage';\n\nclass CardAdded extends Component {\n  \n  constructor() {\n    super();\n\n    this.state = {\n      type: '',\n      source: [\n        /* 페이지 링크형 데이터\n        {src:'https://velopert.com/3613', format:'', width:'', height:'', title:'퍼온글 제목123', desc:'퍼온글 내용1', href:'https://velopert.com/3613', url:'velopert.com'},\n        {src:'http://pino0308.cafe24.com/bakery/', format:'', width:'', height:'', title:'제목234', desc:'퍼온글 내용', href:'http://pino0308.cafe24.com/bakery/', url:'pino0308.cafe24.com'},\n         */\n        \n        /* 임베드형 데이터\n        {src:'https://youtu.be/mP--G6TmH8Q', format:'', width:'', height:'', title:'mP--G6TmH8Q', desc:'', href:'https://www.youtube.com/watch?time_continue=2&amp;v=mP--G6TmH8Q', url:'www.youtube.com'},\n        {src:'https://youtu.be/mP--G6TmH8Q', format:'', width:'', height:'', title:'mP--G6TmH8Q', desc:'', href:'https://www.youtube.com/watch?time_continue=2&amp;v=mP--G6TmH8Q', url:'www.youtube.com'},\n        */\n        \n        /* 썸네일형 데이터 */\n        {src:'http://images5.fanpop.com/image/photos/25700000/Gifs-gifs-25782795-360-240.gif', format:'gif', width:'800', height:'600', title:'', desc:'', href:'', url:''},\n        {src:'https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg', format:'jpg', width:'1920', height:'1080', title:'', desc:'', href:'', url:''},\n        {src:'https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg', format:'video', width:'1920', height:'1080', title:'', desc:'', href:'', url:''},\n        {src:'https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg', format:'jpg', width:'1920', height:'1080', title:'', desc:'', href:'', url:''},\n        {src:'https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg', format:'jpg', width:'1920', height:'1080', title:'', desc:'', href:'', url:''},\n        {src:'https://cdn.2kgames.com/civilization.com/RF-Cree/RF-Cree-leader.jpg', format:'jpg', width:'1920', height:'1080', title:'', desc:'', href:'', url:''},\n        \n      ],\n      insight: '',\n      more: '',\n      ratio: '',\n      sight: [],\n    }\n  }\n\n  componentDidMount () {\n    const added = this.state;\n    let source = added.source,\n        first = source[0],\n        src = first.src,\n        l_src = source.length,\n        ex_src = l_src,\n        insight,\n        more,\n        type,\n        type_thumb = /\\.(jpg|gif|bmp|png)$/i,\n        type_video = /\\.(mp4)$/i,\n        type_embed = 'youtube.com',\n        w = first.width,\n        h = first.height,\n        ratio = w/h,\n        sight = [];\n\n    //첨부타입 세팅 (thumb, embed, page)\n    if (src.match(type_thumb) || src.match(type_video)) { //이미지 || 동영상\n      type = 'thumb'\n    } else if (src.indexOf(type_embed) != -1) { //embed.. embed 정규식 찾아봐야함\n      type = 'embed'\n    } else { //나머지\n      type = 'page'\n    }\n\n    if (l_src > 1){ //더보기 나오는 초기값은 thumb 형태를 제외하고 2이상\n      more = l_src - 1;\n    }\n    \n    //thumb \n    if (type === 'thumb'){\n\n      //이미지 비율에 따른 형태 세팅\n      if (ratio > 1) {\n        ratio = 'w' //가로형\n      } else if (ratio < 1) {\n        ratio = 'h' //세로형\n      } else {\n        ratio = 'q' //정방형\n      }\n\n      //보여지는 이미지 최대개수 세팅 (정방형만 최대 5 / 나머지는 최대 4)\n      if (l_src >= 5) {\n        if (ratio !== 'q') { //가로형 || 세로형\n          ex_src = 4;\n        } else {\n          if (ratio === 'q') { //정방형\n            ex_src = 5;\n          }\n        }\n        more = l_src - ex_src;\n      }\n    }\n\n    //embed\n    if (type === 'embed'){\n      \n    }\n\n    //page\n    if (type === 'page'){\n\n    }\n\n    //하위 컴포넌트에 보낼 데이터 (실제 카드에 노출될 데이터)\n    sight = source.slice(0, ex_src);\n    insight = sight.length;\n\n    this.setState({\n      type: type,\n      ratio: ratio,\n      sight: sight,\n      insight: insight,\n      more: more,\n    });\n\n  }\n\n  render() {\n    const added = this.state;\n    return (\n      <>\n        \n        {added.type === 'thumb' &&\n        <>\n          <CardAddedThumb\n            added = {added}\n            view = {this.props.view}\n          />\n         </>\n        }\n\n        {added.type === 'embed' &&\n        <CardAddedEmbed\n          added = {added}\n          view={this.props.view}\n         />\n        }\n\n        {added.type === 'page' &&\n        <CardAddedPage\n        added = {added}\n          view={this.props.view}\n         />\n        }\n      </>\n    );\n  }\n}\n\nexport default CardAdded;","import React, { Component } from 'react';\n\nclass CardUser extends Component {\n\n  render() {\n    return (\n      <>\n        {/* 카드 :: 태그 */}\n        <div className=\"tag\">\n          <span className=\"list\">\n            <a href=\"#\">#태그1</a>\n            <a href=\"#\">#태그2</a>\n          </span>\n          <span className=\"more\">+1개 관심사</span>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CardUser;","import React, { Component } from 'react';\nimport Dimm from '../Ui/Dimm';\nimport axios from 'axios';\n\nfunction like(id, cnt) {\n  axios.put(`http://dev-jolse.iptime.org:9000/feed/${id}`, id, cnt).then((response) => {\n    console.log(id, cnt)\n  });\n}\n\nclass CardUser extends Component {\n  state = {\n    cnt: 0,\n    isLike: false,\n    dropdown: false,\n  }\n\n  componentDidMount (){\n    this.setState({\n      cnt: this.props.liked\n    })\n  }\n\n  openDropdown = () =>{\n    this.setState({\n      dropdown: true\n    });\n  }\n  closeDropdown = () =>{\n    this.setState({\n      dropdown: false\n    });\n  }\n\n  likeThis = () =>{\n    let likeCnt = this.state.cnt,\n        id = this.props.id;\n\n    if (this.state.isLike) {\n      likeCnt--;\n    } else {\n      likeCnt++;\n    }\n    this.setState({\n      isLike: !this.state.isLike,\n      cnt: likeCnt\n    });\n\n    like(id, likeCnt);\n    \n  }\n\n\n  \n\n  render() {\n\n    return (\n      <>\n        {/* 카드 :: 유틸 - 좋아요, 댓글, 보내기 */}\n        <div className=\"util\">\n          \n          {/* 좋아요 */}\n          <div className=\"liked\">\n            <button type=\"button\" onClick={this.likeThis}>\n              <i className={this.state.isLike ? 'fas fa-heart' : 'far fa-heart'}></i>\n              <span className=\"label\">\n                {this.state.cnt === 0 \n                  ? '좋아요'\n                  : this.state.cnt\n                }\n              </span>\n            </button>\n          </div>\n          \n          {/* 댓글 */}\n          <div className=\"reply\"><button type=\"button\" onClick={this.props.view}><i className=\"far fa-comments\"></i>댓글</button></div>\n\n          {/* 보내기 - 컬렉션 저장, 새카드에 공유하며 작성, SNS공유 */}\n          <div className=\"share\">\n            <div className=\"dropdownGroup\">\n              <button type=\"button\" onClick={this.openDropdown}><i className=\"fas fa-share-alt\"></i><span className=\"label\">보내기</span></button>\n              {/* 글로벌 기능 :: 드롭다운 */}\n              {this.state.dropdown &&\n                <>\n                  <Dropdown confirm={this.props.confirm} \n                            popup={this.props.popup} \n                            completeMsg={this.props.completeMsg}\n                            write={this.props.write} />\n                  <Dimm close={this.closeDropdown} />\n                </>\n              }\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nclass Dropdown extends Component {\n  state = {\n    dropdown: false,\n    utilDropdown: [\n      {name:'다른 컬렉션 선택', ico:'fas fa-plus-square', extra:'more', evt:'popup', id:'collections', tit:'컬렉션 선택'},\n      {name:'기본 컬렉션에 저장하기', ico:'fas fa-paperclip', evt:'toast', msg: '컬렉션에 저장 되었습니다.'},\n      {name:'카드에 작성하기', ico:'fas fa-pencil-alt', evt:'write'},\n      {name:'외부에 공유하기', ico:'fas fa-external-link-alt', evt:'popup', id:'share', tit:'외부 서비스로 공유하기'},\n    ],\n  }\n\n  static defaultProps = {\n    name: '',\n    ico: '',\n    id: '',\n    extra:'',\n    evt:'',\n  }\n  \n  render() {\n    \n    return (\n      <div className=\"dropdown\">\n        {this.state.utilDropdown.map((util, i) => {\n            return (<DropdownItem name={util.name}\n                                  evt={util.evt}\n                                  act={util.id}\n                                  tit={util.tit}\n                                  msg={util.msg}\n                                  confirm={this.props.confirm}\n                                  popup={this.props.popup}\n                                  completeMsg={this.props.completeMsg}\n                                  write={this.props.write}\n                                  ico={util.ico}\n                                  extra={util.extra}\n                                  key={i}/>);\n        })}\n      </div>\n    );\n  }\n}\n\nclass DropdownItem extends Component {\n  \n  utilEvt = () =>{\n    let evt = this.props.evt,\n        act = this.props.act,\n        tit = this.props.tit,\n        tstmsg = this.props.msg;\n\n    if (evt === 'confirm') {\n      this.props.confirm(act, tit)\n    }\n    if (evt === 'popup') {\n      this.props.popup(act, tit)\n    }\n    if (evt === 'toast') {\n      this.props.completeMsg(tstmsg)\n    }\n    if (evt === 'write') {\n      this.props.write()\n    }\n  }\n\n  render() {\n\n    return (\n      <div className={this.props.extra ? 'extraItem' : 'item'}>\n        <button type=\"button\" title={this.props.name} className={this.props.extra} onClick={this.utilEvt}>\n          {this.props.ico &&\n            <i className={this.props.ico}></i>\n           }\n          <span className={this.props.extra && 'blind'}>{this.props.name}</span>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CardUser;","import React, { Component } from 'react';\n\nclass Toast extends Component {\n  state = {\n    toast: false,\n  }\n  static defaultProps = {\n    msg: '토스트 메시지'\n  }\n\n  render() {\n    \n    return (\n      <div id=\"toast\"><p className=\"msg\">{this.props.msg}</p></div>\n    );\n  }\n}\n\nexport default Toast;","import React, { Component } from 'react';\n\nclass UserReport extends Component {\n  state = {\n    checked: false,\n    d_checked: false,\n    userReport: [\n      {label:'스팸, 광고', name:'user_report', for:'report_1'}, \n      {label:'외설적인 내용', name:'user_report', for:'report_2'}, \n      {label:'폭력적인 콘텐츠', name:'user_report', for:'report_3'}, \n      {label:'타인을 괴롭힘', name:'user_report', for:'report_4'}, \n      {label:'관련없는 관심사에 발행함', name:'user_report', for:'report_5',\n        inner: [\n          {label:'창작문예', name:'report_cont', for:'cont_1'}, \n          {label:'일기', name:'report_cont', for:'cont_2'}, \n          {label:'시', name:'report_cont', for:'cont_3'}, \n          {label:'영감을주는이야기', name:'report_cont', for:'cont_4'}, \n          {label:'철학', name:'report_cont', for:'cont_5'}, \n          {label:'자기계발', name:'report_cont', for:'cont_6'}, \n          {label:'어록', name:'report_cont', for:'cont_7'}, \n          {label:'한국음식', name:'report_cont', for:'cont_8'}, \n          {label:'음식', name:'report_cont', for:'cont_9'}, \n        ]\n      }, \n      {label:'기타', name:'user_report', for:'report_6'}, \n    ],\n    related: [],\n  }\n  static defaultProps = {\n    label:'',\n    name: '',\n    for: '',\n    inner: '',\n  }\n\n  chkReport = (e)=>{\n    this.setState({\n      checked: e.target.id,\n      reason: e.target.value,\n    });\n  }\n\n  chkReportDetail = (e)=>{\n    let isChecked = e.target.checked;\n    const { related } = this.state;\n    if (isChecked) {\n      this.setState({\n        related: related.concat(e.target.id)\n      })\n    } else {\n      this.setState({\n        related: related.filter(item => item !== e.target.id)\n      })\n    }\n  }\n\n  chkEtc = (e)=>{\n    this.setState({\n      etc: e.target.value,\n    })\n  }\n  \n  submit = (e)=>{\n    e.preventDefault();\n    \n    let isChecked = this.state.checked,\n        d_isChecked = this.state.related,\n        d_etc = this.state.etc,\n        msg = this.state.reason;\n\n    if (!isChecked){\n      this.props.completeMsg('사유를 선택하세요.');\n    } else if (isChecked === 'report_5' && d_isChecked.length ===0){\n      this.props.completeMsg('이 콘텐츠와 관련없는 관심사를 선택하세요.');\n    } else if (isChecked === 'report_6' && !d_etc){\n      this.props.completeMsg('기타 사유를 입력하세요.');\n    } else {\n      this.props.close();\n      this.props.completeMsg('['+ msg +'] 사유로 신고되었습니다.');\n    }\n    console.log(isChecked, d_isChecked, d_etc)\n\n  }\n\n  completeMsg = ()=>{\n    let msg = this.props.msg;\n    msg = '신고되었습니다.'\n    this.props.completeMsg(msg);\n    this.props.close();\n  }\n  \n  render() {\n    const {\n      userReport,\n    } = this.state;\n    \n    return (\n      <form onSubmit={this.submit}>\n      <div className=\"entry report\">\n        <div className=\"popupList radio\">\n      \n          {userReport.map((report, i) => {\n            return (\n              <div className=\"item\" key={i}>\n                <input type=\"radio\" \n                       name={report.name} \n                       id={report.for}\n                       value={report.label}\n                       onChange={this.chkReport}\n                />\n                <label htmlFor={report.for}>\n                  {report.label}\n                </label>\n\n                {i === 4 && this.state.checked === 'report_5' && \n                  <div className=\"popupList popupInner checkbox\" onChange={this.chkReportDetail}>\n                    <p><strong>이 콘텐츠와 관련없는 관심사를 선택하세요.</strong></p>\n                    {userReport[4].inner.map((cont, i) => {\n                      return (<InnerReport label={cont.label}\n                                          name={cont.name}\n                                          for={cont.for}\n                                          \n                                          key={i} />);\n                    })}\n                  </div>\n                }\n\n                {i === 5 && this.state.checked === 'report_6' && \n                  <div className=\"popupList popupInner\">\n                    <p><strong>신고하는 이유가 무엇인가요? (최대 50자)</strong></p>\n                    <textarea name=\"report_reason\" id=\"report_reason\" className=\"textarea\" placeholder=\"이유를 입력해주세요\" \n                              onChange={this.chkEtc}\n                              value={this.state.etc || ''}\n                    ></textarea>\n                  </div>\n                }\n\n              </div>\n            );\n          })}\n\n        </div>\n      </div>\n\n      <div className=\"btns\">\n        <button type=\"button\" className=\"btn\" onClick={this.props.close}>취소</button>\n        <button type=\"submit\" className=\"btn red\">확인</button>\n      </div>\n      </form>\n      \n    );\n  }\n}\nclass InnerReport extends Component {\n  render() {\n    return (\n      <div className=\"item\">\n        <input type=\"checkbox\" \n               name={this.props.name} \n               id={this.props.for} />\n        <label htmlFor={this.props.for}>{this.props.label}</label>\n      </div>\n    );\n  }\n}\n\nexport default UserReport;","import React, { Component } from 'react';\n\nclass Collections extends Component {\n  state = {\n    checked: '',\n    collections: [\n      {label: '기본 컬렉션', name:'cname', for:'collection_1'},\n      {label: '해축', name:'cname', for:'collection_2'},\n    ],\n    chk_collections: [],\n  }\n  static defaultProps = {\n    label:'',\n    name: '',\n    for: '',\n  }\n\n  addCollection = (c_data)=>{\n    const { collections } = this.state;\n    this.setState({\n      collections: collections.concat({ ...c_data })\n    })\n  }\n\n  chkCollection = (e)=>{\n    let isChecked = e.target.checked,\n        val = e.target.value,\n        chk = document.querySelector('input[value=\"'+ val +'\"]');\n    const { chk_collections } = this.state;\n    if (isChecked) {\n      this.setState({\n        chk_collections: chk_collections.concat(val)\n      })\n      chk.checked = true;\n    } else {\n      this.setState({\n        chk_collections: chk_collections.filter(item => item !== val)\n      })\n      chk.checked = false;\n    }\n  }\n\n  submit = (e)=>{\n    e.preventDefault();\n    const { chk_collections } = this.state;\n    if (e.keyCode !== 13) {\n      let msg = '';\n      if (chk_collections.length !== 0){\n        msg = '선택한 컬렉션에 저장되었습니다.';\n        this.props.close();\n      } else {\n        msg = '컬렉션을 선택하세요.';\n      }\n      this.props.completeMsg(msg);\n      console.log(chk_collections);\n    }\n  }\n\n  completeMsg = ()=>{\n    let msg = this.props.msg;\n    msg = '컬렉션에 저장되었습니다.';\n    this.props.completeMsg(msg);\n    this.props.close();\n  }\n  \n  render() {\n    const {\n      collections\n    } = this.state;\n    \n    return (\n      <form onSubmit={this.submit}>\n      <div className=\"entry collections\">\n        <div className=\"popupList checkbox\">\n          {collections.map((collection, i) => {\n            return (\n              i < 3 &&\n              <CollectionList label={collection.label}\n                              name={collection.name}\n                              for={collection.for}\n                              id={collection.for+'_c'}\n                              firstletter={collection.label.substring(0, 1)}\n                              value={collection.for.substring(-2)}\n                              chk={this.chkCollection}\n                              key={i} />\n            );\n          })}\n        </div>\n\n        <div className=\"create\">\n          <Create onCreate={this.addCollection}\n                  l_collection={collections.length}\n            />\n        </div>\n\n        <div className=\"popupList checkbox\">\n          {collections.map((collection, i) => {\n            return (\n              <CollectionList label={collection.label}\n                              name={collection.name}\n                              for={collection.for}\n                              id={collection.for}\n                              firstletter={collection.label.substring(0, 1)}\n                              value={collection.for}\n                              chk={this.chkCollection}\n                              key={i} />\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"btns\">\n        <button type=\"button\" className=\"btn\" onClick={this.props.close}>취소</button>\n        <button type=\"submit\" className=\"btn red\">확인</button>\n      </div>\n      </form>\n\n    );\n  }\n}\n\nclass CollectionList extends Component {\n  state = {\n    checked: false,\n  }\n  render() {\n    return (\n      <div className=\"item\">\n        <input type=\"checkbox\" \n              name={this.props.name} \n              id={this.props.id}\n              for={this.props.for}\n              value={this.props.value}\n              onChange={this.props.chk}\n         />\n        <label htmlFor={this.props.for}><i>{this.props.firstletter}</i><span>{this.props.label}</span></label>\n      </div>\n    );\n  }\n}\n\nclass Create extends Component {\n  state = {\n    creatable: false,\n  }\n  createCollection = (e)=>{\n    if (e.target.value){\n      this.setState({\n        creatable: true, \n        label: e.target.value,\n        name: 'cname',\n        for: 'collection_'+(this.props.l_collection+1)\n      });\n      \n    } else {\n      this.setState({creatable: false})\n    }\n  }\n  creatable = (e)=>{\n    if (e.keyCode === 13){\n      e.preventDefault();\n    }\n    if (this.state.creatable && e.keyCode === 13) {\n      this.create();\n    }\n  }\n  create = (e)=>{\n    if (this.state.creatable){\n      this.props.onCreate(this.state);\n      this.setState({\n        creatable: false,\n        label: '',\n        name: 'cname',\n        for: '',\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"item\">\n        <label htmlFor=\"create_c\"><i className=\"fas fa-plus\"></i></label>\n        <input type=\"text\" \n              name={this.state.name} \n              id=\"create_c\" \n              onChange={this.createCollection}\n              onKeyDown={this.creatable}\n              value={this.state.label || ''}\n              placeholder=\"새 컬렉션 만들기\"\n        />\n        {this.state.creatable &&\n          <button type=\"button\" onClick={this.create}>만들기</button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Collections;","import React, { Component } from 'react';\n\nclass Share extends Component {\n  state = {\n    shares: [\n      {label: '페이스북에 공유하기', name:'facebook'},\n      {label: '트위터에 공유하기', name:'twitter'},\n      {label: '밴드에 공유하기', name:'band'},\n      {label: '클립보드에 복사', name:'clipboard'},\n    ]\n  }\n  static defaultProps = {\n    label:'',\n    name: '',\n  }\n\n  share = (e)=>{\n    let btn = e.target.className;\n    if (btn === 'facebook'){\n      alert('facebook');\n    }\n    if (btn === 'twitter'){\n      alert('twitter');\n    }\n    if (btn === 'band'){\n      alert('band us');\n    }\n    if (btn === 'clipboard'){\n      alert('clipboard');\n    }\n  }\n  \n  render() {\n    const {\n      shares,\n    } = this.state;\n    \n    return (\n      <div className=\"entry share\">\n        <div className=\"shareList\">\n          {shares.map((share, i) => {\n            return (\n            <ShareItem label={share.label}\n                      name={share.name}\n                      click={this.share}\n                      key={i}\n             />\n             );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nclass ShareItem extends Component {\n  render() {\n    return (\n      <div className=\"item\">\n        <button type=\"button\" className={this.props.name} title={this.props.label} onClick={this.props.click}>\n          <span className=\"blind\">{this.props.label}</span>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Share;","import React, { Component } from 'react';\nimport UserReport from './UserReport';\nimport Collections from './Collections';\nimport Share from './Share';\n\nclass Popup extends Component {\n  state = {\n    popup: false,\n    type: '',\n    checked: '',\n  }\n  static defaultProps = {\n    title: '',\n    isBtn:'',\n  }\n\n  completeMsg = ()=>{\n    let msg = this.props.msg;\n    msg = '신고되었습니다.'\n    this.props.completeMsg(msg);\n    this.props.close();\n  }\n\n  closeDimm = (e)=>{\n    let dimm = e.target.className;\n    if (dimm === 'box') {\n      this.props.close();\n    }\n  }\n\n  render() {\n    \n    return (\n      \n      <div id=\"popup\" onClick={this.closeDimm}>\n        <div className=\"box\">\n          <div className=\"frame\">\n            <button type=\"button\" className=\"btnClose\" onClick={this.props.close}><i className=\"fas fa-times\"></i><span className=\"blind\">닫기</span></button>\n            <div className=\"title\">{this.props.title}</div>\n\n            {/* 카드-유저-신고 */}\n            {this.props.type === 'report' && \n              <UserReport completeMsg={this.props.completeMsg}\n                          close={this.props.close}\n                />\n            }\n\n            {/* 컬렉션 선택 */}\n            {this.props.type === 'collections' && \n              <Collections completeMsg={this.props.completeMsg}\n                            close={this.props.close}\n                />\n            }\n\n            {/* 외부 서비스로 공유하기 */}\n            {this.props.type === 'share' && \n              <Share completeMsg={this.props.completeMsg}\n                            close={this.props.close}\n                />\n            }\n\n          </div>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default Popup;","import React, { Component } from 'react';\n\nclass Confirm extends Component {\n  state = {\n    confirm: false,\n    type: '',\n  }\n  static defaultProps = {\n    title: '컨펌 제목',\n    html: '컨펌 내용',\n  }\n\n  completeMsg = ()=>{\n    let msg = this.props.msg,\n        type = this.props.type;\n\n    if (type === 'mute'){\n      msg = '뮤트되었습니다.'\n    }\n    if (type === 'del'){\n      msg = '삭제되었습니다.'\n    }\n    this.props.completeMsg(msg);\n    this.props.close();\n  }\n\n  closeDimm = (e)=>{\n    let dimm = e.target.className;\n    if (dimm === 'box') {\n      this.props.close()\n    }\n  }\n  \n  render() {\n    \n    return (\n      <div id=\"confirm\" onClick={this.closeDimm}>\n        <div className=\"box\">\n          <div className=\"frame\">\n            <button type=\"button\" className=\"btnClose\" onClick={this.props.close}><i className=\"fas fa-times\"></i><span className=\"blind\">닫기</span></button>\n            <div className=\"title\">{this.props.title}</div>\n            <div className=\"entry\">{this.props.html}</div>\n            <div className=\"btns\">\n              <button type=\"button\" className=\"btn\" onClick={this.props.close}>취소</button>\n              <button type=\"button\" className=\"btn red\" onClick={this.completeMsg}>확인</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Confirm;","import React, { Component } from 'react';\nimport './Detail.scss';\n\n\nclass Detail extends Component {\n  state = {\n    detail: false,\n  }\n\n  render() {\n    return (\n      <div id=\"detail\" onClick={this.props.close}>상세내용</div>\n    );\n  }\n}\n\nexport default Detail;","import React, { Component } from 'react';\nimport './Write.scss';\n\n\nclass Write extends Component {\n  state = {\n    Write: false,\n  }\n\n  render() {\n    return (\n      <div id=\"write\" onClick={this.props.close}><input value=\"카드작성/수정\" /></div>\n    );\n  }\n}\n\nexport default Write;","import React, { Component } from 'react';\nimport CardUser from './CardUser';\nimport CardContents from './CardContents';\nimport CardAdded from './CardAdded';\nimport CardTag from './CardTag';\nimport CardUtil from './CardUtil';\nimport Toast from '../Ui/Toast';\nimport Popup from '../Ui/Popup/';\nimport Confirm from '../Ui/Confirm';\n\n\nimport Detail from '../Detail/Detail';\nimport Write from '../Write/Write';\n\nimport './Card.scss';\nimport '../Ui/Ui.scss';\n\n\nclass Card extends Component {\n  state = {\n    toast: false,\n    popup: false,\n    confirm: false,\n    detail:false,\n    write:false,\n    type: '',\n  }\n\n  // 토스트 메시지\n  toastMsg = (tstmsg)=>{ // 토스트메시지 문구\n    let msg = tstmsg;\n\n    this.setState({\n      toast: true,\n      msg: msg,\n    });\n    setTimeout(()=> this.setState({toast: false}), 1000); // 1초 후 hide\n  }\n\n  // 팝업\n  openPopup = (act, tit)=>{ // 팝업콘텐츠 종류(ex: report, collections...), 팝업타이틀 문구\n    let type = act,\n        title = tit;\n\n    this.setState({\n      popup: true,\n      type: type,\n      title: title,\n    });\n  }\n  closePopup = ()=>{\n    this.setState({popup: false});\n  }\n\n  // 컨펌\n  openConfirm = (act, tit, cont)=>{ // (확인 후 토스트메시지를 위한)컨펌메시지 종류(ex: mute, del...), 컨펌타이틀 문구, 컨펌콘텐츠 문구\n    let type = act,\n        title = tit,\n        html = cont;\n\n    this.setState({\n      confirm: true,\n      type: type,\n      title: title,\n      html: html,\n    });\n  }\n  closeConfirm = () =>{\n    this.setState({confirm: false});\n  }\n\n  // (임시)상세페이지\n  openDetail = () =>{\n    // this.setState({detail: true});\n    const cardID = this.props.card.feed_id;\n    this.props.history.push('/posts/' + cardID);\n  }\n  \n  closeDetail = () =>{\n    this.setState({detail: false});\n  }\n\n  // (임시)작성/수정페이지\n  openWrite = () =>{\n    this.setState({write: true});\n  }\n  closeWrite = () =>{\n    this.setState({write: false});\n  }\n\n\n  render() {\n\n    const {card} = this.props;\n\n    return (\n      <>\n\n        {/* 카드 */}\n        <div className=\"card\">\n          <CardUser id={card.feed_id}\n            confirm={this.openConfirm}\n            popup={this.openPopup}\n            completeMsg={this.toastMsg}\n            write={this.openWrite}\n            time={card.build_date}\n          />\n          \n          <CardContents\n            view={this.openDetail}\n            title={card.title}\n            contents={card.content}\n          />\n\n          <CardAdded\n            view={this.openDetail}\n          />\n\n          <CardTag />\n\n          <CardUtil\n            confirm={this.openConfirm}\n            popup={this.openPopup}\n            completeMsg={this.toastMsg}\n            view={this.openDetail}\n            write={this.openWrite}\n            id={card.feed_id}\n            liked={card.good}\n          />\n        </div>\n\n      \n        {this.state.toast && \n          <Toast \n            msg={this.state.msg}\n          /> \n        }\n\n        {this.state.confirm && \n          <Confirm\n            title={this.state.title}\n            html={this.state.html}\n            type={this.state.type}\n            msg={this.state.msg}\n            close={this.closeConfirm}\n            completeMsg={this.toastMsg}\n           /> \n        }\n        \n        {this.state.popup &&\n          <Popup\n            title={this.state.title}\n            type={this.state.type}\n            close={this.closePopup}\n            completeMsg={this.toastMsg}\n          /> \n        }\n\n\n        {this.state.detail && \n          <Detail\n            close={this.closeDetail}\n           />\n        }\n\n        {this.state.write && \n          <Write\n            close={this.closeWrite}\n           />\n        }\n\n      </>\n    );\n  }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from '../Card/Card';\nimport Toast from '../Ui/Toast';\nimport Popup from '../Ui/Popup/';\nimport Confirm from '../Ui/Confirm';\nimport Detail from '../Detail/Detail';\nimport Write from '../Write/Write';\n\nimport '../Card/Card.scss';\nimport '../Ui/Ui.scss';\nimport axios from 'axios';\n\nclass List extends Component {\n\n  state = {\n    feed: [],\n    toast: false,\n    popup: false,\n    confirm: false,\n    detail:false,\n    write:false,\n    type: '',\n  }\n\n  // 토스트 메시지\n  toastMsg = (tstmsg)=>{ // 토스트메시지 문구\n    let msg = tstmsg;\n\n    this.setState({\n      toast: true,\n      msg: msg,\n    });\n    setTimeout(()=> this.setState({toast: false}), 1000); // 1초 후 hide\n  }\n\n  // 팝업\n  openPopup = (act, tit)=>{ // 팝업콘텐츠 종류(ex: report, collections...), 팝업타이틀 문구\n    let type = act,\n        title = tit;\n\n    this.setState({\n      popup: true,\n      type: type,\n      title: title,\n    });\n  }\n  closePopup = ()=>{\n    this.setState({popup: false});\n  }\n\n  // 컨펌\n  openConfirm = (act, tit, cont)=>{ // (확인 후 토스트메시지를 위한)컨펌메시지 종류(ex: mute, del...), 컨펌타이틀 문구, 컨펌콘텐츠 문구\n    let type = act,\n        title = tit,\n        html = cont;\n\n    this.setState({\n      confirm: true,\n      type: type,\n      title: title,\n      html: html,\n    });\n  }\n  closeConfirm = () =>{\n    this.setState({confirm: false});\n  }\n\n  // (임시)상세페이지\n  openDetail = () =>{\n    this.setState({detail: true});\n  }\n  closeDetail = () =>{\n    this.setState({detail: false});\n  }\n\n  // (임시)작성/수정페이지\n  openWrite = () =>{\n    this.setState({write: true});\n  }\n  closeWrite = () =>{\n    this.setState({write: false});\n  }\n\n  componentDidMount() {\n    axios.get('http://dev-jolse.iptime.org:9000/feed').then((response) => {\n      this.setState({\n        feed: response.data.results\n      })\n    });\n  }\n\n\n  render() {\n\n    const { feed } = this.state;\n    const { history } = this.props;\n\n    return (\n      <>\n\n        {/* <Login /> */}\n        \n        {/* 카드 */}\n\n        {feed.map((f, i) => {\n          return (\n            <Card confirm={this.openConfirm}\n              popup={this.openPopup}\n              completeMsg={this.toastMsg}\n              write={this.openWrite}\n              view={this.openDetail}\n              history={history}\n              card={feed[i]}\n              key={i}\n            />\n          );\n        })}\n        \n      \n        {this.state.toast && \n          <Toast \n            msg={this.state.msg}\n          /> \n        }\n\n        {this.state.confirm && \n          <Confirm\n            title={this.state.title}\n            html={this.state.html}\n            type={this.state.type}\n            msg={this.state.msg}\n            close={this.closeConfirm}\n            completeMsg={this.toastMsg}\n           /> \n        }\n        \n        {this.state.popup &&\n          <Popup\n            title={this.state.title}\n            type={this.state.type}\n            close={this.closePopup}\n            completeMsg={this.toastMsg}\n          /> \n        }\n\n\n        {this.state.detail && \n          <Detail\n            close={this.closeDetail}\n           />\n        }\n\n        {this.state.write && \n          <Write\n            close={this.closeWrite}\n           />\n        }\n\n      </>\n    );\n  }\n}\n\nexport default List;","import React, { Component, Fragment } from 'react';\nimport './login.css';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { cc } from '../actions/infoAction';\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        isValidEmail: false,\n        isValidPw: false,\n        doLogin: false\n    }\n\n    handleChange = (e) => {\n        let {isValidEmail, isValidPw} = this.state;\n        const target_name = e.target.name;\n        const value = e.target.value;\n        // 정규식 활용하여 유효성 체크\n        let reg_text = '';\n\n        if (target_name === \"email\") {\n            reg_text = /^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z0-9\\-]+/\n            isValidEmail = reg_text.test(value);\n\n        } else if (target_name === \"password\") {\n            reg_text = /^[a-zA-Z0-9]{6,12}$/;\n            isValidPw = reg_text.test(value);\n        }\n\n        this.setState({\n            [target_name]: value,\n            isValidEmail: isValidEmail,\n            isValidPw: isValidPw,\n            doLogin: isValidEmail && isValidPw,\n        });\n    }\n\n    handleKeyUp = (e) => {\n        e.preventDefault();\n        // Enter 키 눌렀을 떄 댓글 입력되도록 함\n        if (e.keyCode === 13) {\n            this.loginSubmit(e);\n        }\n    }\n\n    loginSubmit = (e) => {\n        e.preventDefault();\n        \n        const {email, password} = this.state;\n\n        axios.post('http://dev-jolse.iptime.org:9000/login', {\n            email: email,\n            password: password,\n        })\n        .then( response => {\n            const responseData = response.data;\n            const successValue = responseData.success;\n            switch(successValue) {\n                case 1:\n                    // 로그인 성공\n                    console.log(\"로그인에 성공했습니다.\");\n                    this.props.b();\n                    break;\n                case 2:\n                    // 비밀번호 틀림\n                    console.log(\"비밀번호가 틀렸습니다.\");\n                    break;\n                case 3:\n                    // 아이디 없음\n                    console.log(\"아이디가 존재하지 않습니다.\");\n                    break;\n            }\n        } )\n        .catch( error => { console.log(error) } );\n    }\n\n    render() {\n        const {doLogin} = this.state;\n\n        return (\n            <Fragment>\n                {/* logged=true 면 List로 이동 */}\n                {this.props.logined && <Redirect to=\"/list\" />}\n                <div className=\"signin_wrapper\">\n                    <h1 className=\"signin_title\">로그인</h1>\n                    <form className=\"login_form\" onKeyUp={this.handleKeyUp}>\n                        <div className=\"login_input_area\">\n                            <input type=\"text\" name=\"email\" className=\"login_input\"\n                                placeholder=\"이메일\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"login_input_area\">\n                            <input type=\"password\" name=\"password\" className=\"login_input\"\n                                placeholder=\"비밀번호\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"login_button_area\">\n                            <input type=\"button\" value=\"로그인\" onClick={doLogin ? this.loginSubmit: null}\n                                className={doLogin ? \"submit_btn do_submit\" : \"submit_btn non_submit\"} />\n                        </div>\n                    </form>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        logined: state.infoFunc.logged\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    console.log(\"## dispatch 로그인하기 function\");\n    return {\n        b: () => {dispatch(cc())},\n    }\n}\n\n// connect(state, action)\n// mapStateToProps: store의 state를 props로 갖고 온다\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import * as types from './ActionTypes'\n\n/**\n * action 객체를 만드는 액션 함수 선언\n * type: action의 형태를 정의하는 것으로, 필수로 작성해야 함\n */\nexport const cc = () => ({\n    type: types.ISAUTH\n})\n\nexport const checkJoin = () => ({\n    type: types.ISJOIN\n})\n\nexport const checkValid = () => ({\n    type: types.ISVALID\n})","/**\n * Action 종류들을 선언\n */\n\nexport const ISAUTH = 'ISAUTH';\nexport const ISJOIN = 'ISJOIN';\nexport const ISVALID = 'ISVALID';","import React, { Component, Fragment } from 'react';\nimport './join.css';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { cc, checkJoin } from '../actions/infoAction';\n\nclass Join extends Component {\n    state = {\n        email: '',\n        password: '',\n        isValidEmail: false,\n        isValidPw: false,\n        doJoin: false,\n    }\n\n    handleChange = (e) => {\n        let {isValidEmail, isValidPw} = this.state;\n        const target_name = e.target.name;\n        const value = e.target.value;\n        // 정규식 활용하여 유효성 체크\n        let reg_text = '';\n\n        if (target_name === \"email\") {\n            reg_text = /^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z0-9\\-]+/\n            isValidEmail = reg_text.test(value);\n\n        } else if (target_name === \"password\") {\n            reg_text = /^[a-zA-Z0-9]{6,12}$/;\n            isValidPw = reg_text.test(value);\n        }\n\n        this.setState({\n            [target_name]: value,\n            isValidEmail: isValidEmail,\n            isValidPw: isValidPw,\n            doJoin: isValidEmail && isValidPw,\n        });\n    }\n\n    joinSubmit = (e) => {\n        e.preventDefault();\n        \n        const {email, password} = this.state;\n\n        axios.post('http://dev-jolse.iptime.org:9000/register', {\n            email: email,\n            password: password,\n        })\n        .then( response => {\n            const responseData = response.data;\n            const successValue = responseData.success;\n            if (successValue === 1) {\n                console.log(\"회원가입 성공\");\n                this.props.checkJoin();\n            }\n        } )\n        .catch( error => { console.log(error) } );\n    }\n\n    render() {\n        const {doJoin} = this.state;\n\n        return (\n            <Fragment>\n                {/* joined=true 면 Login으로 이동 */}\n                {this.props.joined && <Redirect to=\"/login\" />}\n                <div className=\"signin_wrapper\">\n                    <h1 className=\"signin_title\">회원가입</h1>\n                    <form className=\"login_form\">\n                        <div className=\"login_input_area\">\n                            <input type=\"text\" name=\"email\" className=\"login_input\"\n                                placeholder=\"이메일\" onChange={this.handleChange}/>\n                            <span></span>\n                        </div>\n                        <div className=\"login_input_area\">\n                            <input type=\"password\" name=\"password\" className=\"login_input\"\n                                placeholder=\"비밀번호 (6~12자의 영문 대소문자 및 숫자)\"\n                                onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"login_button_area\">\n                            <input type=\"button\" value=\"회원가입\" onClick={doJoin ? this.joinSubmit: null}\n                                className={doJoin ? \"submit_btn do_submit\" : \"submit_btn non_submit\"} />\n                        </div>\n                    </form>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        logged: state.infoFunc.logged,\n        joined: state.infoFunc.joined\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    console.log(\"## dispatch 회원가입 function\");\n    return {\n        b: () => {dispatch(cc())},\n        checkJoin: () => {dispatch(checkJoin())}\n    }\n}\n\n// connect(state, action)\n// mapStateToProps: store의 state를 props로 갖고 온다\nexport default connect(mapStateToProps, mapDispatchToProps)(Join);","import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Editor from './Editor/Editor';\nimport SearchList from './Search/SearchList';\nimport PostView from './Posts/PostView';\nimport List from './List/List';\nimport Login from './Login/Login';\nimport Join from './Join/Join';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      logged: false,\n    }\n  }\n\n  isAuth = () => {\n    this.setState({logged: !this.state.logged});\n    localStorage.setItem('logged', !this.state.logged);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"rootContainer\">\n          <Route path=\"/editor\" rrender={(props) => <Editor {...props} auth={this.isAuth}/>} />\n          <Route path=\"/searchList\" component={SearchList}/>\n          <Route path=\"/list\" render={(props) => <List {...props} auth={this.isAuth}/>}/>\n          <Route exact path=\"/\" render={(props) => <Join {...props} auth={this.isAuth}/>}/>\n          <Route path=\"/login\" render={(props) => <Login {...props} auth={this.isAuth} />}/>\n          <Route path=\"/posts/:id\" render={(props) => <PostView {...props} auth={this.isAuth}/>}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport * as types from '../actions/ActionTypes'\n\nconst info = {\n    logged: false,\n    joined: false\n}\n\n/**\n * Reducer 함수 정의\n * state가 undefined일 때(스토어가 생성될 때) state 기본 값을 info로 사용\n * state를 직접 수정하면 안되고,\n * 기존 상태 값에 원하는 객체를 덮어쓴 새로운 객체를 만들어서 반환해야 한다\n * @param {*} state \n * @param {*} action \n */\nconst infoFunc = (state = info, action = types.ISAUTH) => {\n    console.log(action);\n    switch (action.type) {\n        case types.ISAUTH:\n            console.log(\"infoFunc logged == \" + state.logged);\n            return {...state, logged: !state.logged}\n        case types.ISJOIN:\n            console.log(\"infoFunc joined == \" + state.joined);\n            return {...state, joined: !state.joined}\n        default:\n            return state;\n    }\n}\n\n// const checkValidFunc = (state, action = types.ISVALID) => {\n\n// }\n\n// store에 연결(combine)\nconst reducers = combineReducers({\n    infoFunc\n});\n\nexport default reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers/info';\n\n// reducer를 인수로 하여 store 생성\nconst store = createStore(reducer, window.devToolsExtension && window.devToolsExtension());\n\n// Provider: react-redux에 내장된 컴포넌트로, 리액트 애플리케이션에 손쉽게 스토어를 연동할 수 있도록 도와줌\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}